// automatically generated by the FlatBuffers compiler, do not modify

package frc.taurus.logger.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class LoggerStatus extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static LoggerStatus getRootAsLoggerStatus(ByteBuffer _bb) { return getRootAsLoggerStatus(_bb, new LoggerStatus()); }
  public static LoggerStatus getRootAsLoggerStatus(ByteBuffer _bb, LoggerStatus obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean LoggerStatusBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "LOGS"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LoggerStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double timestamp() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public frc.taurus.logger.generated.LogStatus logStatus(int j) { return logStatus(new frc.taurus.logger.generated.LogStatus(), j); }
  public frc.taurus.logger.generated.LogStatus logStatus(frc.taurus.logger.generated.LogStatus obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int logStatusLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public frc.taurus.logger.generated.LogStatus.Vector logStatusVector() { return logStatusVector(new frc.taurus.logger.generated.LogStatus.Vector()); }
  public frc.taurus.logger.generated.LogStatus.Vector logStatusVector(frc.taurus.logger.generated.LogStatus.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createLoggerStatus(FlatBufferBuilder builder,
      double timestamp,
      int log_statusOffset) {
    builder.startTable(2);
    LoggerStatus.addTimestamp(builder, timestamp);
    LoggerStatus.addLogStatus(builder, log_statusOffset);
    return LoggerStatus.endLoggerStatus(builder);
  }

  public static void startLoggerStatus(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addTimestamp(FlatBufferBuilder builder, double timestamp) { builder.addDouble(0, timestamp, 0.0); }
  public static void addLogStatus(FlatBufferBuilder builder, int logStatusOffset) { builder.addOffset(1, logStatusOffset, 0); }
  public static int createLogStatusVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLogStatusVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endLoggerStatus(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // log_status
    return o;
  }
  public static void finishLoggerStatusBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "LOGS"); }
  public static void finishSizePrefixedLoggerStatusBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "LOGS"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LoggerStatus get(int j) { return get(new LoggerStatus(), j); }
    public LoggerStatus get(LoggerStatus obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

